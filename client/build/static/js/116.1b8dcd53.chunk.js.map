{"version":3,"file":"static/js/116.1b8dcd53.chunk.js","mappings":"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","sources":["components/Apps/customer-management/forms/CustomerForm.jsx","components/Apps/customer-management/modal/AddCustomerModal.jsx","components/Apps/customer-management/table/CustomTable.jsx","components/Apps/customer-management/modal/ModalHeader.jsx","components/Apps/customer-management/modal/CustomerAddedGroupModal.jsx","components/Apps/customer-management/modal/CustomUserInfoModal.jsx","components/Apps/customer-management/modal/CustomEditModal.jsx","components/Apps/customer-management/CustomerList.jsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport {Button, Form, Input} from \"antd\";\nimport { useForm } from \"antd/es/form/Form\";\n\nconst AddCustomerForm = ({onSubmit}) => {\n    const [formData, setFormData] = useState({\n        name: \"\",\n        lastName: \"\",\n        areaCode: \"\",\n        phone: \"\",\n    });\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData((prevData) => ({\n            ...prevData,\n            [name]: value,\n        }));\n    };\n\n    const onFinish = () => {\n        const phoneNumber = formData.areaCode + formData.phone;\n\n        const newCustomer = {\n            name: formData.name,\n            lastName: formData.lastName,\n            phone: phoneNumber\n        }\n        onSubmit(newCustomer);\n    }\n\n    return(\n        <form\n            className={\"d-flex flex-column\"}\n            style={{\n                fontFamily: \"Inter\",\n                marginTop: 20,\n            }}\n            onSubmit={(e) => {\n                e.preventDefault();\n                onFinish();\n            }}\n        >\n            <div className={\"mt-3\"}>\n                <h4>Customer Name</h4>\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={formData.name}\n                    onChange={handleChange}\n                    required\n                    className={\"form-control form-control-solid w-100 mb-5 mt-2\"}\n                    placeholder={\"Customer Name\"}\n                />\n            </div>\n            <div className={\"mt-3\"}>\n                <h4>Customer Lastname</h4>\n                <input\n                    type=\"text\"\n                    name=\"lastName\"\n                    value={formData.lastName}\n                    onChange={handleChange}\n                    required\n                    className={\"form-control form-control-solid w-100 mb-5 mt-2\"}\n                    placeholder={\"Customer Lastname\"}\n                />\n            </div>\n\n            <div className={\"d-flex gap-3 mt-3 mb-3\"}>\n                <div className={\"w-25\"}>\n                    <h4>Area Code</h4>\n                    <input\n                        type=\"number\"\n                        name=\"areaCode\"\n                        value={formData.areaCode}\n                        onChange={handleChange}\n                        className={\"form-control form-control-solid w-100 mb-5 mt-2\"}\n                        required\n                        placeholder={\"+90\"}\n                    />\n                </div>\n                <div className={\"w-100\"}>\n                    <h4>Customer Phone Number</h4>\n                    <input\n                        type=\"number\"\n                        name=\"phone\"\n                        value={formData.phone}\n                        onChange={handleChange}\n                        className={\"form-control form-control-solid w-100 mb-5 mt-2\"}\n                        required\n                        placeholder={\"Customer Phone Number\"}\n                    />\n                </div>\n            </div>\n            <div className=' d-flex justify-content-end'>\n                <button className='btn btn-primary fw-bold' type=\"submit\">Add Customer</button>\n            </div>\n        </form>\n    )\n}\n\nexport default AddCustomerForm;","import React, { useEffect, useState } from \"react\";\nimport { Modal} from \"antd\";\nimport AddCustomerForm from \"../forms/CustomerForm\";\nimport '../index.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isFailure, isLoading, isSuccess } from \"../../../../utilities/reduxStateHelper\";\nimport { fireToast } from \"../../../../utilities/toastHelper\";\nimport ModalHeader from \"../../draft-management/modal/ModalHeader\"\nimport { resetCreateCustomer } from \"../../../../services/redux/customers/add-customer\";\nconst AddCustomerModal = ({fetchNextData, page,addCustomer, setIsAddModalShow, customTheme}) => {\n    const state = useSelector((state) => state.customer.addCustomer);\n    const dispatch = useDispatch();\n    const [message, setMessage] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    \n    const onSubmit = ({name, lastName, phone}) => {\n        addCustomer({name, lastName, phone});\n    }\n    \n    useEffect(() => {\n        if(isSuccess(state))\n        {\n            setMessage(state.data.message)\n            setLoading(false);\n            setIsAddModalShow(false);\n            fireToast(state.data.message, 'SUCCESS', customTheme.theme);\n            fetchNextData(page)\n        } \n        if(isLoading(state))\n        {\n            setLoading(true);\n        }\n        if(isFailure(state))\n        {\n            console.log(state.error)\n            setLoading(false);\n            setMessage(state.error.message);\n            fireToast(state.error.message, 'SUCCESS', customTheme.theme);\n        }\n        return () => {\n            dispatch(resetCreateCustomer())\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [message, setIsAddModalShow, state])\n\n\n    return(\n        <div\n            className='modal fade show d-block'\n            id='kt_modal_add_draft'\n            role='dialog'\n            tabIndex={-1}\n            aria-modal='true'\n        >\n            {/* begin::Modal dialog */}\n            <div className='modal-dialog modal-dialog-centered mw-650px'>\n                {/* begin::Modal content */}\n                <div className='modal-content' style={{display: 'flex', justifyContent: 'center'}}>\n                    <ModalHeader\n                        title={\"Add new customer\"}\n                        handleCloseModal={() => setIsAddModalShow(false)}\n                    />\n\n                    {/* begin::Modal body */}\n                    <div className={\"pb-10 ps-10 pe-10\"}>\n                        <AddCustomerForm\n                            onSubmit={onSubmit}\n                        />\n                    </div>\n                    {/* end::Modal body */}\n\n                </div>\n                {/* end::Modal content */}\n            </div>\n            {/* end::Modal dialog */}\n        </div>\n    )\n}\n\nexport default AddCustomerModal;","import React, {useEffect, useState} from \"react\";\nimport {ConfigProvider, Table} from \"antd\";\nimport '../index.css';\nimport {KTIcon} from \"../../../../_metronic/helpers\";\nimport { Empty } from \"antd\";\nimport AddModal from \"../modal/AddCustomerModal\"; // Empty component from Ant Design\nimport { isFailure, isLoading, isSuccess } from \"../../../../utilities/reduxStateHelper\";\n\nconst CustomTable = ({addCustomer,dataSource, columns, rowKey, customTheme, title, paginationData, fetchNextData, state, loading}) => {\n    const [isAddModalShow, setIsAddModalShow] = useState(false);\n\n    const emptyText = <span style={{ color: customTheme.color }}>No Data</span>;\n\n    return(\n        <ConfigProvider\n            theme={{\n                token: {\n                    colorBgContainer: customTheme.backgroundColor,\n                    colorText: customTheme.color,\n                }\n            }}\n        >\n            <div\n                style={{backgroundColor: customTheme.backgroundColor, padding: \"10px 20px\", borderRadius: '10px'}}\n            >\n                <div style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center'\n                }}>\n                    <h1\n                        style={{color: customTheme.color, marginTop: '20px', marginBottom: \"20px\", fontFamily: 'Inter', paddingLeft: '20px', paddingRight: '20px'}}\n                    >\n                        {title}\n                    </h1>\n                    <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                        <button type='button' className='btn btn-success p-2 p-md-3 me-3' onClick={() => {\n                            document.body.classList.add('modal-open');\n                            document.body.classList.remove('modal-closed');\n                            setIsAddModalShow(true)\n                        }}>\n                            <KTIcon iconName='plus' className='fs-2'/>\n                            {\n                                \"Excel Import\"\n                            }\n                        </button>\n                        <button type='button' className='btn btn-primary p-2 p-md-3' onClick={() => {\n                            document.body.classList.add('modal-open');\n                            document.body.classList.remove('modal-closed');\n                            setIsAddModalShow(true)\n                        }}>\n                            <KTIcon iconName='plus' className='fs-2'/>\n                            {\n                                title === \"Customers\" ? \"Add Customer\" : title === \"Draft Table\" ? \"Add Draft\" : \"Add File\"\n                            }\n                        </button>\n                    </div>\n                </div>\n\n                <Table\n                    style={{\n                        backgroundColor: customTheme.backgroundColor,\n                        borderRadius: '10px',\n                        display: \"flex\",\n                        flexDirection: 'column',\n                        marginTop: \"1rem\"\n                    }}\n                    loading={loading}\n                    dataSource={dataSource}\n                    columns={columns}\n                    pagination={{\n                        current: paginationData.page,\n                        total: paginationData.totalItems,\n                        pageSize: paginationData.perpage,\n                        onChange: (page) => fetchNextData(page)\n                    }}\n                    rowKey={rowKey}\n                    scroll={{\n                        x: 'auto',\n                    }}\n                    locale={{\n                        emptyText:\n                            <Empty\n                                description={emptyText}\n                            />\n                    }}\n                />\n            </div>\n            {\n                isAddModalShow && (\n                    <AddModal\n                        addCustomer={addCustomer}\n                        fetchNextData={fetchNextData}\n                        page={paginationData.page}\n                        setIsAddModalShow={setIsAddModalShow}\n                        customTheme={customTheme}\n                        title={title}\n                    />\n                )\n            }\n            {isAddModalShow && <div className='modal-backdrop fade show'></div>}\n\n        </ConfigProvider>\n    )\n}\n\nexport default CustomTable;","import React from \"react\";\nimport {KTIcon} from \"../../../../_metronic/helpers\";\n\nconst ModalHeader = ({title, handleCloseModal}) => {\n    return (\n        <div className='modal-header'>\n            {/* begin::Modal title */}\n            <h2 className='fw-bolder'>{title}</h2>\n            {/* end::Modal title */}\n\n            {/* begin::Close */}\n            <div\n                className='btn btn-icon btn-sm btn-active-icon-primary cursor-pointer'\n                data-kt-users-modal-action='close'\n                onClick={handleCloseModal}\n            >\n                <KTIcon iconName='cross' className='fs-1'/>\n            </div>\n            {/* end::Close */}\n        </div>\n    )\n}\n\nexport default ModalHeader;","import React from \"react\";\nimport ModalHeader from \"./ModalHeader\";\n\nconst CustomerAddedGroupModal = ({setIsAddGroupModal}) => {\n    return (\n        <div\n            className='modal fade show d-block'\n            id='kt_modal_add_draft'\n            role='dialog'\n            tabIndex={-1}\n            aria-modal='true'\n        >\n            {/* begin::Modal dialog */}\n            <div className='modal-dialog modal-dialog-centered mw-650px'>\n                {/* begin::Modal content */}\n                <div className='modal-content' style={{display: 'flex', justifyContent: 'center'}}>\n                    <ModalHeader\n                        title={\"Customer Added Group\"}\n                        handleCloseModal={() => setIsAddGroupModal(false)}\n                    />\n\n                    {/* begin::Modal body */}\n                    <div className={\" d-flex justify-content-between p-10 \"}>\n                        <div className=' d-flex justify-content-end'>\n                            <button\n                                className='btn btn-primary fw-bold'\n                                type=\"button\"\n                                onClick={() => setIsAddGroupModal(true)}\n                            >\n                                Add to Gray List\n                            </button>\n                        </div>\n                        <div className=' d-flex justify-content-end'>\n                            <button\n                                className='btn btn-primary fw-bold'\n                                type=\"button\"\n                                onClick={() => setIsAddGroupModal(true)}\n                            >\n                                Add to Blacklist\n                            </button>\n                        </div>\n                    </div>\n                    {/* end::Modal body */}\n\n                </div>\n                {/* end::Modal content */}\n            </div>\n            {/* end::Modal dialog */}\n        </div>\n    )\n}\n\nexport default CustomerAddedGroupModal;","import React, {useState} from \"react\";\nimport '../index.css';\nimport ModalHeader from \"./ModalHeader\";\nimport CustomerAddedGroupModal from \"./CustomerAddedGroupModal\";\n\nconst CustomUserInfoModal = ({ setIsUserInfoShowModal, selectedUser, formatPhoneNumber}) => {\n    const [isAddGroupModal, setIsAddGroupModal] = useState(false);\n\n    return (\n        <div\n            className='modal fade show d-block'\n            id='kt_modal_add_draft'\n            role='dialog'\n            tabIndex={-1}\n            aria-modal='true'\n        >\n            {/* begin::Modal dialog */}\n            <div className='modal-dialog modal-dialog-centered mw-650px'>\n                {/* begin::Modal content */}\n                <div className='modal-content' style={{display: 'flex', justifyContent: 'center'}}>\n                    <ModalHeader\n                        title={\"Customer Information\"}\n                        handleCloseModal={() => setIsUserInfoShowModal(false)}\n                    />\n\n                    {/* begin::Modal body */}\n                    <div className={\"pb-10 ps-10 pe-10\"}>\n                        {\n                            selectedUser && (\n                                <div style={{fontFamily: 'Inter'}}>\n                                    <div>\n                                        <div style={{\n                                            display: 'flex',\n                                            justifyContent: 'space-between',\n                                            alignItems: 'center',\n                                            marginTop: '20px'\n                                        }}>\n                                            <h1>{selectedUser.name}</h1>\n                                            <h6>{selectedUser.lastName}</h6>\n                                        </div>\n                                        <div style={{\n                                            display: 'flex',\n                                            flexDirection: 'column',\n                                            marginTop: '20px',\n                                            marginBottom: '20px'\n                                        }}>\n                                            <h2 className={\"fw-bold\"}>Tel No: </h2>\n                                            <h6>{formatPhoneNumber(selectedUser.phone)}</h6>\n                                        </div>\n                                    </div>\n                                    <div className={\"d-flex flex-row justify-content-between\"}>\n                                        <div className=' d-flex justify-content-end'>\n                                            <button className='btn btn-danger fw-bold' type=\"submit\">Delete Customer\n                                            </button>\n                                        </div>\n                                        <div className=' d-flex justify-content-end'>\n                                            <button\n                                                className='btn btn-primary fw-bold'\n                                                type=\"button\"\n                                                onClick={() => setIsAddGroupModal(true)}\n                                            >\n                                                Add To Blacklist or GrayList\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                    {/* end::Modal body */}\n\n                </div>\n                {/* end::Modal content */}\n            </div>\n            {/* end::Modal dialog */}\n\n            {\n                isAddGroupModal && (\n                    <CustomerAddedGroupModal setIsAddGroupModal={setIsAddGroupModal}/>\n                )\n            }\n            {isAddGroupModal && <div className='modal-backdrop fade show'></div>}\n        </div>\n    )\n}\n\nexport default CustomUserInfoModal;","import React, {useEffect, useState} from \"react\";\nimport {Modal, Form, Input, Button} from \"antd\";\nimport { useForm } from \"antd/es/form/Form\";\nimport \"../index.css\";\nimport ModalHeader from \"./ModalHeader\";\n\nconst CustomEditModal = ({updateCustomer,selectedUser, setIsEditShowModal}) => {\n    const [formData, setFormData] = useState({\n        name: \"\",\n        lastName: \"\",\n        phone: \"\",\n    });\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData((prevData) => ({\n            ...prevData,\n            [name]: value,\n        }));\n    };\n\n    const onFinish = () => {\n        updateCustomer({\n            name: formData.name,\n            lastName: formData.lastName,\n            phone: formData.phone,\n            customerId: selectedUser.id,\n        });\n        setIsEditShowModal(false);\n    };\n\n    useEffect(() => {\n        if (selectedUser) {\n            setFormData({\n                name: selectedUser.name,\n                lastName: selectedUser.lastName,\n                phone: selectedUser.phone,\n            });\n        }\n    }, [selectedUser]);\n\n    return (\n        <div\n            className='modal fade show d-block'\n            id='kt_modal_add_draft'\n            role='dialog'\n            tabIndex={-1}\n            aria-modal='true'\n        >\n            {/* begin::Modal dialog */}\n            <div className='modal-dialog modal-dialog-centered mw-650px'>\n                {/* begin::Modal content */}\n                <div className='modal-content' style={{display: 'flex', justifyContent: 'center'}}>\n                    <ModalHeader\n                        title={\"Customer Editing\"}\n                        handleCloseModal={() => setIsEditShowModal(false)}\n                    />\n\n                    {/* begin::Modal body */}\n                    <form\n                        className={\"d-flex flex-column pb-10 ps-10 pe-10\"}\n                        style={{\n                            fontFamily: \"Inter\",\n                            marginTop: 20,\n                        }}\n                        onSubmit={(e) => {\n                            e.preventDefault();\n                            onFinish();\n                        }}\n                    >\n                        <div className={\"mt-3\"}>\n                            <h4>Customer Name</h4>\n                            <input\n                                type=\"text\"\n                                name=\"name\"\n                                value={formData.name}\n                                onChange={handleChange}\n                                required\n                                className={\"form-control form-control-solid w-100 mb-5 mt-2\"}\n                                placeholder={\"Customer Name\"}\n                            />\n                        </div>\n                        <div className={\"mt-3\"}>\n                            <h4>Customer Lastname</h4>\n                            <input\n                                type=\"text\"\n                                name=\"lastName\"\n                                value={formData.lastName}\n                                onChange={handleChange}\n                                required\n                                className={\"form-control form-control-solid w-100 mb-5 mt-2\"}\n                                placeholder={\"Customer Lastname\"}\n                            />\n                        </div>\n                        <div className={\"mt-3 w-100\"}>\n                            <h4>Customer Phone Number</h4>\n                            <input\n                                type=\"number\"\n                                name=\"phone\"\n                                value={formData.phone}\n                                onChange={handleChange}\n                                className={\"form-control form-control-solid w-100 mb-5\"}\n                                required\n                                placeholder={\"Customer Phone Number\"}\n                            />\n                        </div>\n                        <div className=' d-flex justify-content-end'>\n                            <button className='btn btn-primary fw-bold' type=\"submit\">Save</button>\n                        </div>\n                    </form>\n                    {/* end::Modal body */}\n\n                </div>\n                {/* end::Modal content */}\n            </div>\n            {/* end::Modal dialog */}\n        </div>\n    )\n}\n\nexport default CustomEditModal;","import React, {useEffect, useState, useCallback} from \"react\";\nimport { parsePhoneNumberFromString } from 'libphonenumber-js';\nimport CustomTable from './table/CustomTable';\nimport CustomUserInfoModal from \"./modal/CustomUserInfoModal\";\nimport {CustomListItem} from \"./table/columns/CustomListItem\";\nimport CustomEditModal from \"./modal/CustomEditModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCustomersAction, resetGetCustomers } from \"../../../services/redux/customers/get-customers\";\nimport { get_local_storage_item } from \"../../../utilities\";\nimport { isFailure, isLoading, isSuccess } from \"../../../utilities/reduxStateHelper\";\nimport { createCustomerAction, resetCreateCustomer } from \"../../../services/redux/customers/add-customer\";\nimport { updateCustomerAction, resetUpdateCustomer } from \"../../../services/redux/customers/update-customer\"\nimport { deleteCustomerAction, resetDeleteState } from \"../../../services/redux/customers/delete-customer\";\nimport { fireToast } from \"../../../utilities/toastHelper\";\nimport {KTIcon} from \"../../../_metronic/helpers\";\nimport {useTheme} from \"../../../services/themeService\";\nimport { formatPhoneNumber } from \"../../../utilities/stringHelper\";\n\nconst CustomerList = () => {\n    // localhost:5000/api/v1/userId/customers/list?page=1&perpage=10\n    const {theme} = useTheme();\n    const dispathcer = useDispatch();\n    const getCustomersState = useSelector((state) => state.customer.getCustomers);\n    const deleteCustomerState = useSelector((state) => state.customer.deleteCustomer);\n    const updateCustomerState = useSelector((state) => state.customer.updateCustomer);\n    const addCustomerState = useSelector((state) => state.customer.addCustomer);\n    const [isEditShowModal, setIsEditShowModal] = useState(false);\n    const [isUserInfoShowModal, setIsUserInfoShowModal] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [selectedUser, setSelectedUser] = useState();\n    const [customers, setCustomers] = useState([]);\n    const [paginateData, setPaginateData] = useState({});\n    const [defaultPerPage, setDefaultPerPage] = useState(10);\n    \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const handleEdit = (record) => {\n        setSelectedUser(record); // Seçili kullanıcıyı belirle\n        setIsEditShowModal(true); // Düzenleme modalını göster\n    \n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const fetchNextData = useCallback((page) => {\n        dispathcer(getCustomersAction({userId: get_local_storage_item(\"user\").id, page: page, perPage: defaultPerPage}));\n    })\n\n    const handleDelete = (record) => {\n        deleteCurrentCustomer({customerId: record.id});        \n    };\n\n    const handleUserInfoModal = (record) => {\n        setSelectedUser(record); // Seçili kullanıcıyı belirle\n        setIsUserInfoShowModal(true); // Kullanıcı bilgileri modalını aç\n    };\n\n    const addNewCustomer = ({name, lastName, phone}) => {\n        dispathcer(createCustomerAction({userId: get_local_storage_item(\"user\").id, name: name, lastName: lastName, phone: phone}));\n    }\n\n    const updateCurrentCustomer = ({name, lastName, phone, customerId}) => {\n        dispathcer(updateCustomerAction({userId: get_local_storage_item(\"user\").id, name: name, lastName: lastName, phone: phone, customerId: customerId}))\n    }\n    \n    const deleteCurrentCustomer = ({customerId}) => {\n        dispathcer(deleteCustomerAction({userId: get_local_storage_item(\"user\").id, customerId: customerId}));\n    }\n    let columns = [];\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const handleTable = useCallback(() => {\n        if (customers.length > 0)\n        {\n            const columnsKey = Object.keys(customers[0]).filter((item) => (item !== 'id' && item !== 'groupId'));\n            columns = columnsKey.map(key => ({\n            title: key.charAt(0).toUpperCase() + key.slice(1),\n            dataIndex: key,\n            key: key,\n            width: (key === \"phone\") ? \"2%\" : \"6%\",\n                render: (_, record) => {\n                    return (\n                        <>\n                            {key === 'phone' ? (\n                                <>\n                                    <CustomListItem item={formatPhoneNumber(record[key])}/>\n                                </>\n                            ): (\n                                <>\n                                    <CustomListItem item={record[key]} />\n                                </>\n                            )}\n                        </>    \n                    )\n                }\n            }));\n            \n            columns.push({\n                title: 'Action',\n                dataIndex: 'action',\n                width: \"1%\",\n                render: (_, record) => (\n                    <div\n                        style={{\n                            display: 'flex',\n                        }}\n                    >\n\n                        <CustomButton iconName=\"information-2\" onClick={() => handleUserInfoModal(record)} />\n                        <CustomButton iconName=\"notepad-edit\" onClick={() => handleEdit(record)} />\n                        <CustomButton iconName=\"trash-square\" onClick={() => handleDelete(record)} />\n                    </div>\n                ),\n            });\n        }\n    })\n\n    useEffect(() => {\n        // eslint-disable-next-line no-const-assign, react-hooks/exhaustive-deps\n        dispathcer(getCustomersAction({userId: get_local_storage_item(\"user\").id, page: 1, perPage: defaultPerPage}))\n    }, [defaultPerPage, dispathcer])\n    //get customers result\n    useEffect(() => {\n        if (isSuccess(getCustomersState)) {\n            setCustomers(getCustomersState.data.data);\n            setPaginateData(getCustomersState.data.meta);\n            setLoading(false)\n        }\n        if (isFailure(getCustomersState)) {\n        }\n        if (isLoading(getCustomersState)) {\n            setLoading(true);\n        }\n        return () => {\n            dispathcer(resetGetCustomers());\n        }\n    }, [customers, dispathcer, getCustomersState, deleteCustomerState, addCustomerState])\n    // delete customer result\n    useEffect(() => {\n        if (isSuccess(deleteCustomerState)) {\n            fireToast(deleteCustomerState.data.message, \"SUCCESS\", theme.theme);\n            fetchNextData(paginateData.page)\n        }\n        if (isFailure(deleteCustomerState)) {\n            fireToast(deleteCustomerState.error.message, \"FAIL\", theme.theme)\n        }\n        return () => {\n            dispathcer(resetDeleteState());\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [deleteCustomerState, dispathcer])\n    // update customer result\n    useEffect(() => {\n        if (isSuccess(updateCustomerState)) {\n            fireToast(updateCustomerState.data.message, \"SUCCESS\", theme.theme);\n            fetchNextData(paginateData.page)\n        }\n        if (isFailure(updateCustomerState)) {\n            fireToast(updateCustomerState.error.message, \"FAIL\", theme.theme)\n        }\n        return () => {\n            dispathcer(resetUpdateCustomer());\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [updateCustomerState, dispathcer])\n\n\n    handleTable();\n    return (\n        <div style={{\n            marginTop: '20px'\n        }}>\n            <>\n                <CustomTable\n                    addCustomer={addNewCustomer}\n                    dataSource={customers}\n                    dispathcer={dispathcer}\n                    columns={columns}\n                    rowKey={'id'}\n                    customTheme={theme}\n                    title={\"Customers\"}   // Customer Draft ve Draft Table Tablo içeriğinde hangisinin görüleceğini gösteriyor.\n                    paginationData={paginateData}\n                    state={getCustomersState}\n                    fetchNextData={fetchNextData}\n                    loading={loading}\n                />\n                {\n                    isUserInfoShowModal && (\n                        <CustomUserInfoModal\n                            formatPhoneNumber={formatPhoneNumber}\n                            setIsUserInfoShowModal={setIsUserInfoShowModal}\n                            selectedUser={selectedUser}\n                        />\n                    )\n                }\n                {isUserInfoShowModal && <div className='modal-backdrop fade show'></div>}\n\n                {\n                    isEditShowModal && (\n                        <CustomEditModal\n                            updateCustomer={updateCurrentCustomer}\n                            setIsEditShowModal={setIsEditShowModal}\n                            selectedUser={selectedUser}\n                        />\n                    )\n                }\n                {isEditShowModal && <div className='modal-backdrop fade show'></div>}\n            </>\n        </div>\n    )\n}\n\nconst CustomButton = ({onClick, iconName}) => {\n    return(\n        <button\n            onClick={onClick}\n            style={{marginRight: 5, backgroundColor: \"transparent\", border: \"none\"}}\n        >\n            <KTIcon\n                iconName={iconName}\n                iconType=\"duotone\"\n                className={\"bigger-icon\"}\n            />\n        </button>\n    )\n}\n\nexport default CustomerList;"],"names":["_ref","onSubmit","formData","setFormData","useState","name","lastName","areaCode","phone","handleChange","e","value","target","prevData","_jsxs","className","style","fontFamily","marginTop","preventDefault","onFinish","phoneNumber","newCustomer","children","_jsx","type","onChange","required","placeholder","fetchNextData","page","addCustomer","setIsAddModalShow","customTheme","state","useSelector","customer","dispatch","useDispatch","message","setMessage","loading","setLoading","useEffect","isSuccess","data","fireToast","theme","isLoading","isFailure","console","log","error","resetCreateCustomer","id","role","tabIndex","display","justifyContent","ModalHeader","title","handleCloseModal","AddCustomerForm","_ref2","dataSource","columns","rowKey","paginationData","isAddModalShow","emptyText","color","ConfigProvider","token","colorBgContainer","backgroundColor","colorText","padding","borderRadius","alignItems","marginBottom","paddingLeft","paddingRight","onClick","document","body","classList","add","remove","KTIcon","iconName","Table","flexDirection","pagination","current","total","totalItems","pageSize","perpage","scroll","x","locale","Empty","description","AddModal","setIsAddGroupModal","setIsUserInfoShowModal","selectedUser","formatPhoneNumber","isAddGroupModal","CustomerAddedGroupModal","updateCustomer","setIsEditShowModal","customerId","CustomButton","_ref4","marginRight","border","iconType","CustomerList","useTheme","dispathcer","getCustomersState","getCustomers","deleteCustomerState","deleteCustomer","updateCustomerState","addCustomerState","isEditShowModal","isUserInfoShowModal","setSelectedUser","customers","setCustomers","paginateData","setPaginateData","defaultPerPage","setDefaultPerPage","useCallback","getCustomersAction","userId","get_local_storage_item","perPage","deleteCurrentCustomer","_ref3","deleteCustomerAction","handleTable","length","columnsKey","Object","keys","filter","item","map","key","charAt","toUpperCase","slice","dataIndex","width","render","_","record","_Fragment","CustomListItem","push","handleUserInfoModal","handleEdit","handleDelete","meta","resetGetCustomers","resetDeleteState","resetUpdateCustomer","CustomTable","createCustomerAction","CustomUserInfoModal","CustomEditModal","updateCustomerAction"],"sourceRoot":""}