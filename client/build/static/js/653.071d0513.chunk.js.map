{"version":3,"file":"static/js/653.071d0513.chunk.js","mappings":"kLAgHoB,qBAAXA,OAAyBC,EAAAA,gBAAkBC,EAAAA,U,iFCjGpD,MA+QMC,EAAeC,IAAqC,IAApC,QAACC,EAAO,SAAEC,EAAQ,UAAEC,GAAUH,EAChD,OACII,EAAAA,EAAAA,KAAA,UAAQC,QAASJ,EACTK,MAAO,CAACC,YAAa,EAAGC,gBAAiB,cAAeC,OAAQ,QAChEC,SAAwB,SAAdP,IAAwB,EAAKQ,UAC3CP,EAAAA,EAAAA,KAACQ,EAAAA,GAAM,CACHV,SAAUA,EACVW,SAAS,UACTC,UAAW,iBAEV,EAIjB,EA7RwBC,IAAwG,IAAvG,KAACC,EAAI,cAACC,EAAa,YAAEC,EAAW,kBAACC,EAAiB,SAACC,EAAQ,YAACC,EAAW,UAAElB,EAAS,aAAEmB,GAAaP,EACtH,MAAMQ,GAAcC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,MAAMC,cACjDC,GAAcJ,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,MAAMR,cACjDW,GAAaC,EAAAA,EAAAA,OACZC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,KAE5BG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,IAChCK,EAAgBC,IAAqBN,EAAAA,EAAAA,WAAS,IAErDnC,EAAAA,EAAAA,YAAU,KACgCkC,EAAxB,QAAd7B,GAAuBmB,EAAuBA,EAAaS,KAAgB,IACrCI,EAAxB,QAAdhC,GAAuBmB,EAAwBA,EAAaY,MAAkB,GAAG,GAClF,CAACZ,EAAcnB,KA4BlBL,EAAAA,EAAAA,YAAU,MACH0C,EAAAA,EAAAA,IAAUjB,KAETc,GAAW,GACXlB,GAAkB,IAClBsB,EAAAA,EAAAA,GAAUlB,EAAYmB,KAAKC,QAAS,UAAWtB,EAAYuB,OAC3D3B,EAAcD,KAEf6B,EAAAA,EAAAA,IAAUtB,IAETc,GAAW,IAEZS,EAAAA,EAAAA,IAAUvB,KAETwB,QAAQC,IAAIzB,EAAY0B,OACxBZ,GAAW,IACXI,EAAAA,EAAAA,GAAUlB,EAAY0B,MAAMN,QAAS,OAAQtB,EAAYuB,QAE7DZ,EAAQ,IACRG,EAAS,IACF,KACHN,GAAWqB,EAAAA,EAAAA,MAAmB,IAGnC,CAAC/B,EAAmBI,KAEvBzB,EAAAA,EAAAA,YAAU,MACH0C,EAAAA,EAAAA,IAAUZ,KAETS,GAAW,GACXlB,GAAkB,IAClBsB,EAAAA,EAAAA,GAAUb,EAAYc,KAAKC,QAAS,UAAWtB,EAAYuB,OAC3D3B,EAAcD,KAEf6B,EAAAA,EAAAA,IAAUjB,IAETS,GAAW,IAEZS,EAAAA,EAAAA,IAAUlB,KAETS,GAAW,IACXI,EAAAA,EAAAA,GAAUb,EAAYqB,MAAMN,QAAS,OAAQtB,EAAYuB,QAE7DZ,EAAQ,IACRG,EAAS,IACF,KACHN,GAAWsB,EAAAA,EAAAA,MAAmB,IAGnC,CAAChC,EAAkBS,IAGtB,MAAMwB,EAAgBC,IAClB,MAAMC,EAAWC,SAASC,eAAe,gBACnC,eAAEC,EAAc,aAAEC,GAAiBJ,EAEzC,GAAIG,IAAmBC,EAAc,CACjC,MAAMC,EAAkB5B,EAAK6B,MAAM,EAAGH,GAChCI,EAAe9B,EAAK6B,MAAMH,EAAgBC,GAC1CI,EAAiB/B,EAAK6B,MAAMF,GAElC,IAAIK,EAAgBF,EAEpB,OAAQR,GACJ,IAAK,OACDU,EAAa,IAAAC,OAAOH,EAAY,KAChC,MACJ,IAAK,SACDE,EAAa,IAAAC,OAAOH,EAAY,KAChC,MACJ,IAAK,gBACDE,EAAa,IAAAC,OAAOH,EAAY,KAOxC,MAAMI,EAAW,GAAAD,OAAML,GAAeK,OAAGD,GAAaC,OAAGF,GACzD9B,EAAQiC,EACZ,KAAO,CAEH,MAAMC,EAAe,MACjB,OAAQb,GACJ,IAAK,OACD,MAAO,IACX,IAAK,SACD,MAAO,IACX,IAAK,gBACD,MAAO,IACX,QACI,MAAO,GAElB,EAXoB,GAafc,EAAmBpC,EAAK6B,MAAM,EAAGH,GACjCW,EAAkBrC,EAAK6B,MAAMH,GAE7BQ,EAAW,GAAAD,OAAMG,GAAgBH,OAAGE,GAAYF,OAAGE,GAAYF,OAAGI,GACxEpC,EAAQiC,EACZ,GAIEI,EAAcC,IAChB,MAAMhB,EAAWC,SAASC,eAAe,gBACnC,eAAEC,EAAc,aAAEC,GAAiBJ,EAEzC,GAAIG,IAAmBC,EAAc,CACjC,MAAMC,EAAkB5B,EAAK6B,MAAM,EAAGH,GAChCI,EAAe9B,EAAK6B,MAAMH,EAAgBC,GAC1CI,EAAiB/B,EAAK6B,MAAMF,GAElC,IAAIK,EAAgBF,EAAaU,MAAM,MAAMC,KAAI,CAACC,EAAMC,IACnC,cAAbJ,EACM,KAANN,OAAYS,GACQ,YAAbH,EACD,GAANN,OAAUU,EAAQ,EAAC,MAAAV,OAAKS,GAErBA,IACRE,KAAK,MAER,MAAMV,EAAW,GAAAD,OAAML,GAAeK,OAAGD,EAAa,MAAAC,OAAKF,GAC3D9B,EAAQiC,EACZ,GAiBJ,OACIW,EAAAA,EAAAA,MAAA,OACI9D,UAAW,OACXR,MAAO,CACHuE,QAAS,IACXlE,SAAA,EAEFiE,EAAAA,EAAAA,MAAA,OACI9D,UAAW,sBAAsBH,SAAA,EAEjCP,EAAAA,EAAAA,KAAA,MAAAO,SAAI,WACJP,EAAAA,EAAAA,KAAA,SACIU,UAAW,6CACXgE,YAAY,kBACZC,MAAO7C,EACP8C,SAAWC,GAAM9C,EAAS8C,EAAEC,OAAOH,OACnCrE,SAAwB,SAAdP,IAAwB,QAG1CyE,EAAAA,EAAAA,MAAA,OAAK9D,UAAW,0BAA0BH,SAAA,EACtCP,EAAAA,EAAAA,KAAA,MAAAO,SAAI,aACJiE,EAAAA,EAAAA,MAAA,OAAK9D,UAAW,qEAAqEH,SAAA,EACjFP,EAAAA,EAAAA,KAACL,EAAY,CACTE,QAASA,IAAMmD,EAAa,QAC5BlD,SAAS,YACTC,UAAWA,KAEfC,EAAAA,EAAAA,KAACL,EAAY,CACTE,QAASA,IAAMmD,EAAa,UAC5BlD,SAAS,cACTC,UAAWA,KAEfC,EAAAA,EAAAA,KAACL,EAAY,CACTE,QAASA,IAAMmD,EAAa,iBAC5BlD,SAAS,qBACTC,UAAWA,KAEfC,EAAAA,EAAAA,KAACL,EAAY,CACTE,QAASA,IAAMoE,EAAW,WAC1BnE,SAAS,cACTC,UAAWA,KAEfC,EAAAA,EAAAA,KAACL,EAAY,CACTE,QAASA,IAAMoE,EAAW,aAC1BnE,SAAS,cACTC,UAAWA,KAEfC,EAAAA,EAAAA,KAACL,EAAY,CACTE,QAASA,IAAMsC,GAAkB,GACjCrC,SAAS,cACTC,UAAWA,QAGnBC,EAAAA,EAAAA,KAAA,YACI+E,GAAG,cACHC,KAAM,EACNtE,UAAW,6CACXgE,YAAY,wFACZC,MAAOhD,EACPiD,SAAWC,GAAMjD,EAAQiD,EAAEC,OAAOH,OAClCrE,SAAwB,SAAdP,IAAwB,QAI1CC,EAAAA,EAAAA,KAAA,OAAKE,MAAO,CACR+E,WAA0B,SAAdlF,GAAwB,SACpCmF,QAAS,OACTC,eAAgB,WAChBC,UAAW,IACb7E,UACEP,EAAAA,EAAAA,KAAA,UAAQU,UAAW,kBAAmBT,QA7O7BoF,KACjB,GAAkB,QAAdtF,EAAqB,CACrB,GAAa,KAAV+B,EAEC,YADAwD,MAAM,uEAGV,GAAY,KAAT3D,EAEC,YADA2D,MAAM,sCAGVtE,EAAS,CAACc,MAAOA,EAAMH,KAAMA,GAEjC,MACK,GAAkB,SAAd5B,EAAsB,CAC3B,GAAa,KAAV+B,EAEC,YADAwD,MAAM,uEAGV,GAAY,KAAT3D,EAEC,YADA2D,MAAM,sCAGVxE,EAAY,CAACI,eAAaY,MAAMA,EAAOH,KAAKA,GAChD,GAsNoEpB,SACzC,QAAdR,EAAsB,OAAS,WAIpCmC,IACIlC,EAAAA,EAAAA,KAACuF,EAAAA,EAAe,CACZC,kBAAmBrD,EACnBsD,iBA5FOC,IACvB,MAAMC,EAAYD,EAAME,OAClB1C,EAAWC,SAASC,eAAe,gBACnC,eAAEC,EAAc,aAAEC,GAAiBJ,EAEnCK,EAAkB5B,EAAK6B,MAAM,EAAGH,GAChCK,EAAiB/B,EAAK6B,MAAMF,GAE5BO,EAAW,GAAAD,OAAML,GAAeK,OAAG+B,GAAS/B,OAAGF,GACrD9B,EAAQiC,GAER1B,GAAkB,EAAM,EAkFRlB,YAAaA,IAIxBiB,IAAkBlC,EAAAA,EAAAA,KAAA,OAAKU,UAAU,+BAEhC,E,cCpRd,MAuCA,EAvCsBC,IAA2G,IAA1G,KAACC,EAAI,cAAEC,EAAa,YAACC,EAAW,SAAEE,EAAQ,kBAAED,EAAiB,YAAEE,EAAW,UAAElB,EAAS,aAAEmB,GAAaP,EACvH,OACIX,EAAAA,EAAAA,KAAA,OACIU,UAAU,0BACVqE,GAAG,qBACHc,KAAK,SACLC,UAAW,EACX,aAAW,OAAMvF,UAGjBP,EAAAA,EAAAA,KAAA,OAAKU,UAAU,8CAA6CH,UAExDiE,EAAAA,EAAAA,MAAA,OAAK9D,UAAU,gBAAgBR,MAAO,CAACgF,QAAS,OAAQC,eAAgB,UAAU5E,SAAA,EAC9EP,EAAAA,EAAAA,KAAC+F,EAAAA,EAAW,CACRjE,MAAO,YACPkE,iBAAkBA,IAAMjF,GAAkB,MAI9Cf,EAAAA,EAAAA,KAACiG,EAAe,CACZrF,KAAMA,EACNC,cAAeA,EACfE,kBAAmBA,EACnBE,YAAaA,EACblB,UAAWA,EACXmB,aAAcA,EACdF,SAAUA,EACVF,YAAaA,UAQvB,E,gCC/Bd,MAmLA,EAnLoBH,IAA+I,IAA9I,SAACuF,EAAQ,YAACpF,EAAW,YAACqF,EAAW,WAACC,EAAU,SAACpF,EAAQ,YAAEC,EAAW,gBAAEoF,EAAe,aAAEnF,EAAY,aAAEoF,EAAY,cAAEzF,EAAa,QAAEmB,GAAQrB,EACzJ,MAAO4F,EAAgBxF,IAAqBc,EAAAA,EAAAA,WAAS,IAC9C9B,EAAWyG,IAAgB3E,EAAAA,EAAAA,UAAS,QAEpCjB,EAAM6F,IAAW5E,EAAAA,EAAAA,UAAS,GAC3B6E,GAActF,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,MAAM6E,cA0BvD,OApBAzG,EAAAA,EAAAA,YAAU,MACH0C,EAAAA,EAAAA,IAAUsE,KAET3F,GAAkB,IAClBsB,EAAAA,EAAAA,GAAUqE,EAAYpE,KAAKC,QAAS,UAAWtB,EAAYuB,OAC3D3B,EAAcyF,EAAa1F,QAE5B6B,EAAAA,EAAAA,IAAUiE,IAIVhE,EAAAA,EAAAA,IAAUgE,KAETrE,EAAAA,EAAAA,GAAUqE,EAAY7D,MAAMN,QAAS,OAAOtB,EAAYuB,OAErD,KACH0D,GAASS,EAAAA,EAAAA,MAAoB,IAGlC,CAAC5F,EAAkB2F,KAElBlC,EAAAA,EAAAA,MAAA,OAAKtE,MAAO,CACRgF,QAAS,OACT0B,cAAe,SACfnC,QAAS,GACTrE,gBAAiBa,EAAYb,gBAC7ByG,aAAc,IAChBtG,SAAA,EACEiE,EAAAA,EAAAA,MAAA,OAAKtE,MAAO,CACRgF,QAAS,OACT0B,cAAe,MACfzB,eAAgB,gBAChBC,UAAW,GACX0B,aAAc,GACdC,YAAa,GACbC,aAAc,IAChBzG,SAAA,EACEP,EAAAA,EAAAA,KAAA,QAAME,MAAO,CACT+G,MAAOhG,EAAYgG,MACnBC,SAAU,GACVC,WAAY,OACZC,WAAY,SACd7G,SAAC,gBACHiE,EAAAA,EAAAA,MAAA,UACI6C,KAAK,SACL3G,UAAU,6BACVT,QAASA,KACLuG,EAAa,OACbzF,GAAkB,EAAK,EACzBR,SAAA,EAEFP,EAAAA,EAAAA,KAACQ,EAAAA,GAAM,CAACV,SAAS,OAAOY,UAAU,SAAQ,mBAIlD8D,EAAAA,EAAAA,MAAA,OAAAjE,SAAA,CAEQyB,IACIhC,EAAAA,EAAAA,KAAA,OAAKU,UAAW,mDAAmDH,UAC/DP,EAAAA,EAAAA,KAACsH,EAAAA,EAAI,MAKblB,GAAcA,EAAWhC,KAAKmD,IAC1B/C,EAAAA,EAAAA,MAAA,OAEItE,MAAO,CACHE,gBAAiBa,EAAYuG,OAC7BV,aAAc,GACdrC,QAAS,GACToC,aAAc,GACdE,YAAa,GACb7B,QAAS,OACTC,eAAgB,gBAChBsC,WAAY,UACdlH,SAAA,EAEFP,EAAAA,EAAAA,KAAA,QACIE,MAAO,CACH+G,MAAOhG,EAAYgG,MACnBS,OAAQ,WAEZzH,QAASA,KACLuG,EAAa,QACbH,EAAgBkB,GAChBxG,GAAkB,EAAK,EACzBR,SAEDgH,EAAKzF,SAEV0C,EAAAA,EAAAA,MAAA,OAAAjE,SAAA,EACIP,EAAAA,EAAAA,KAAA,UACIC,QAASA,KACLuG,EAAa,QACbH,EAAgBkB,GAChBxG,GAAkB,EAAK,EAE3Bb,MAAO,CAACC,YAAa,EAAGC,gBAAiB,cAAeC,OAAQ,QAAQE,UAExEP,EAAAA,EAAAA,KAACQ,EAAAA,GAAM,CACHV,SAAU,eACVW,SAAS,UACTC,UAAW,mBAGnBV,EAAAA,EAAAA,KAAA,UACIC,QAASA,KAhHhBsH,KACrBpB,EAAYoB,GACZ1G,EAAc,EAAE,EA+GgB8G,CAAgBJ,EAAK,EAEzBrH,MAAO,CAACC,YAAa,EAAGC,gBAAiB,cAAeC,OAAQ,QAAQE,UAExEP,EAAAA,EAAAA,KAACQ,EAAAA,GAAM,CACHV,SAAU,eACVW,SAAS,UACTC,UAAW,uBAjDlB6G,EAAKxC,MAyDI,IAAtBqB,EAAWwB,SACPpD,EAAAA,EAAAA,MAAA,OACI9D,UAAW,yFAAyFH,SAAA,EAEpGP,EAAAA,EAAAA,KAACQ,EAAAA,GAAM,CAACV,SAAS,eAAeY,UAAW,sBAC3CV,EAAAA,EAAAA,KAAA,MAAIU,UAAW,QAAQH,SAAC,wCAKxCP,EAAAA,EAAAA,KAAA,OACIE,MAAO,CACHgF,QAAS,OACTC,eAAgB,WAChBC,UAAW,IACb7E,UAEFP,EAAAA,EAAAA,KAAC6H,EAAAA,EAAU,CACPC,eAAgB,EAChBC,MAAOzB,EAAa0B,WACpBC,SAAU3B,EAAa4B,QACvBxH,UAAiC,UAAtBO,EAAYuB,MAAoB,cAAgB,aAC3DoC,SAAWhE,IAAUC,EAAcD,EAAK,MAI5C2F,IACIvG,EAAAA,EAAAA,KAACmI,EAAa,CACVjC,SAAUA,EACVrF,cAAeA,EACfD,KAAMA,EACNI,SAAUA,EACVD,kBAAmBA,EACnBE,YAAaA,EACblB,UAAWA,EACXmB,aAAcA,EACdJ,YAAaA,IAIxByF,IAAkBvG,EAAAA,EAAAA,KAAA,OAAKU,UAAU,+BAChC,E,2CC5Kd,MA+GA,EA/GkB0H,KACd,MAAOC,EAAWC,IAAgBzG,EAAAA,EAAAA,WAAS,IACrC,MAACW,IAAS+F,EAAAA,EAAAA,MACVC,GAAa9G,EAAAA,EAAAA,MACb+G,GAAmBrH,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,MAAMoH,cACtDC,GAAoBvH,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,MAAMsH,gBAGtDC,EAAgBC,IAAqBjH,EAAAA,EAAAA,UAAS,IAC9CyE,EAAcyC,IAAmBlH,EAAAA,EAAAA,UAAS,CAAC,IAC3CmH,EAAQC,IAAapH,EAAAA,EAAAA,UAAS,KAC9BqH,EAAeC,IAAoBtH,EAAAA,EAAAA,aACnCG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,GAOjCuH,EAAezI,IAAW,IAAV,GAACoE,GAAGpE,EACtB6H,GAAWa,EAAAA,EAAAA,IAAmB,CAACC,QAAQC,EAAAA,EAAAA,IAAuB,QAAQxE,GAAIyE,QAASzE,IAAK,EAGtFlE,EAAiBD,IACnB4H,GAAWiB,EAAAA,EAAAA,IAAgB,CAACH,QAAQC,EAAAA,EAAAA,IAAuB,QAAQxE,GAAInE,KAAMA,EAAM8I,QAASb,IAAiB,EAiEjH,OA/CAnJ,EAAAA,EAAAA,YAAU,KACD2I,IAEAG,GAAWiB,EAAAA,EAAAA,IACX,CACIH,QAAQC,EAAAA,EAAAA,IAAuB,QAAQxE,GAAInE,KAAK,EAAG8I,QAASb,KAEhEP,GAAa,GAClB,GACD,CAACO,EAAgBL,EAAYlC,EAAc+B,KAC9C3I,EAAAA,EAAAA,YAAU,MACF0C,EAAAA,EAAAA,IAAUqG,KACVQ,EAAUR,EAAiBnG,KAAKA,MAChCyG,EAAgBN,EAAiBnG,KAAKqH,MACtC1H,GAAW,KAEXS,EAAAA,EAAAA,IAAU+F,IAGVhG,EAAAA,EAAAA,IAAUgG,IAEVxG,GAAW,GAER,KACHuG,GAAWoB,EAAAA,EAAAA,MAAmB,IAGpC,CAACnB,EAAkB5H,KAErBnB,EAAAA,EAAAA,YAAU,MACF0C,EAAAA,EAAAA,IAAUuG,KACVQ,EAAiBR,EAAkBrG,KAAKA,MACxCkG,GAAWqB,EAAAA,EAAAA,SAEXnH,EAAAA,EAAAA,IAAUiG,IAGVlG,EAAAA,EAAAA,IAAUkG,GAIP,KACHH,GAAWqB,EAAAA,EAAAA,MAAoB,IAGrC,CAACb,EAAQL,KAGP3I,EAAAA,EAAAA,KAAA,OAAKE,MAAO,CACRkF,UAAW,QACb7E,UACEP,EAAAA,EAAAA,KAAC8J,EAAW,CACR5D,SAAUsC,EACVxH,SApEQpB,IAAoB,IAAnB,MAACkC,EAAK,KAAEH,GAAK/B,EAC9B4I,GAAWuB,EAAAA,EAAAA,IAAkB,CAACT,QAAQC,EAAAA,EAAAA,IAAuB,QAAQxE,GAAIjD,MAAOA,EAAOH,KAAMA,IAAO,EAoE5FyE,WAAY4C,EACZ/H,YAAauB,EACbV,MAAO,cACPuE,gBArFa/E,IACrB,MAAMyD,EAAKzD,EAAU,GACrB8H,EAAa,CAACrE,MAAI,EAoFVuB,aAAcA,EACdzF,cAAeA,EACfK,aAAcgI,EACd/C,YAnESoB,IACjBiB,GAAWwB,EAAAA,EAAAA,IAAkB,CAACV,QAAQC,EAAAA,EAAAA,IAAuB,QAAQxE,GAAIyE,QAASjC,EAAKxC,KAAK,EAmEpFjE,YAzEQmJ,IAAgC,IAA/B,aAAC/I,EAAY,MAACY,EAAK,KAACH,GAAKsI,EAC1CzB,GAAW0B,EAAAA,EAAAA,IAAkB,CAACZ,QAAQC,EAAAA,EAAAA,IAAuB,QAAQxE,GAAIyE,QAAStI,EAAa6D,GAAIjD,MAAOA,EAAOH,KAAMA,IAAO,EAyEtHK,QAASA,KAEX,C","sources":["../node_modules/reactjs-popup/src/hooks.tsx","components/Apps/draft-management/forms/DraftCreateForm.jsx","components/Apps/draft-management/modal/AddDraftModal.jsx","components/Apps/draft-management/table/CustomTable.jsx","components/Apps/draft-management/DraftList.jsx"],"sourcesContent":["import { useEffect, RefObject, useLayoutEffect } from 'react';\n\nexport const useOnEscape = (\n  handler: (event: KeyboardEvent) => void,\n  active = true\n) => {\n  useEffect(() => {\n    if (!active) return;\n    const listener = (event: KeyboardEvent) => {\n      // check if key is an Escape\n      if (event.key === 'Escape') handler(event);\n    };\n    document.addEventListener('keyup', listener);\n\n    return () => {\n      if (!active) return;\n      document.removeEventListener('keyup', listener);\n    };\n  }, [handler, active]);\n};\n\nexport const useRepositionOnResize = (handler: () => void, active = true) => {\n  useEffect(() => {\n    if (!active) return;\n    const listener = () => {\n      handler();\n    };\n\n    window.addEventListener('resize', listener);\n\n    return () => {\n      if (!active) return;\n      window.removeEventListener('resize', listener);\n    };\n  }, [handler, active]);\n};\n\nexport const useOnClickOutside = (\n  ref: RefObject<HTMLElement> | RefObject<HTMLElement>[],\n  handler: (event: TouchEvent | MouseEvent) => void,\n  active = true\n) => {\n  useEffect(() => {\n    if (!active) return;\n    const listener = (event: TouchEvent | MouseEvent) => {\n      // Do nothing if clicking ref's element or descendent elements\n      const refs = Array.isArray(ref) ? ref : [ref];\n\n      let contains = false;\n      refs.forEach(r => {\n        if (!r.current || r.current.contains(event.target as Node)) {\n          contains = true;\n          return;\n        }\n      });\n      event.stopPropagation();\n      if (!contains) handler(event);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      if (!active) return;\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [ref, handler, active]);\n};\n\n// Make sure that user is not able TAB out of the Modal content on Open\nexport const useTabbing = (\n  contentRef: RefObject<HTMLElement>,\n  active = true\n) => {\n  useEffect(() => {\n    if (!active) return;\n    const listener = (event: KeyboardEvent) => {\n      // check if key is an Tab\n      if (event.keyCode === 9) {\n        const els = contentRef?.current?.querySelectorAll(\n          'a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), [tabindex=\"0\"]'\n        );\n\n        const focusableEls = Array.prototype.slice.call(els);\n        if (focusableEls.length === 1) {\n          event.preventDefault();\n          return;\n        }\n\n        const firstFocusableEl = focusableEls[0];\n        const lastFocusableEl = focusableEls[focusableEls.length - 1];\n        if (event.shiftKey && document.activeElement === firstFocusableEl) {\n          event.preventDefault();\n          lastFocusableEl.focus();\n        } else if (document.activeElement === lastFocusableEl) {\n          event.preventDefault();\n          firstFocusableEl.focus();\n        }\n      }\n    };\n\n    document.addEventListener('keydown', listener);\n\n    return () => {\n      if (!active) return;\n      document.removeEventListener('keydown', listener);\n    };\n  }, [contentRef, active]);\n};\n\nexport const useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? useLayoutEffect : useEffect;\n","import React, {useEffect, useState} from \"react\";\nimport data from \"@emoji-mart/data\";\nimport Picker from \"@emoji-mart/react\";\nimport Popup from \"reactjs-popup\";\nimport \"reactjs-popup/dist/index.css\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {KTIcon} from \"../../../../_metronic/helpers\";\nimport '../index.css';\nimport {isFailure, isLoading, isSuccess} from \"../../../../utilities/reduxStateHelper\";\nimport {fireToast} from \"../../../../utilities/toastHelper\";\n\nimport DraftEmojiModal from \"../modal/DraftEmojiModal\";\nimport AddDraftModal from \"../modal/AddDraftModal\";\nimport { resetCreateDraft } from \"../../../../services/redux/drafts/create-draft\";\nimport { resetUpdateDraft } from \"../../../../services/redux/drafts/update-draft\";\nconst DraftCreateForm = ({page,fetchNextData, updateDraft,setIsAddModalShow,addDraft,customTheme, modalType, selectedUser}) => {\n    const stateCreate = useSelector((state) => state.draft.createDraft);\n    const stateUpdate = useSelector((state) => state.draft.updateDraft);\n    const dispatcher = useDispatch();\n    const [text, setText] = useState(\"\");\n    const [title, setTitle] = useState(\"\");\n    // eslint-disable-next-line no-unused-vars\n    const [loading, setLoading] = useState(false);\n    const [showEmojiModel, setShowEmojiModel] = useState(false);\n\n    useEffect(() => {\n        modalType !== \"add\" && selectedUser ? setText(selectedUser.text) : setText(\"\");\n        modalType !== \"add\" && selectedUser ? setTitle(selectedUser.title) : setTitle(\"\");\n    }, [selectedUser, modalType]);\n\n    const handleSubmit = () => {\n        if (modalType === \"add\") {\n            if(title === \"\"){\n                alert(\"Lütfen mesajın başlığını giriniz..\");\n                return;\n            }\n            if(text === \"\"){\n                alert(\"Lütfen bir mesaj gönderiniz!\");\n                return;\n            }\n            addDraft({title: title,text: text});\n            \n        }\n        else if (modalType === \"edit\") {\n            if(title === \"\"){\n                alert(\"Lütfen mesajın başlığını giriniz..\");\n                return;\n            }\n            if(text === \"\"){\n                alert(\"Lütfen bir mesaj gönderiniz!\");\n                return;\n            }\n            updateDraft({selectedUser,title:title, text:text});\n        }\n    }\n\n    useEffect(() => {\n        if(isSuccess(stateCreate))\n        {\n            setLoading(false);\n            setIsAddModalShow(false);\n            fireToast(stateCreate.data.message, 'SUCCESS', customTheme.theme);\n            fetchNextData(page);\n        }\n        if(isLoading(stateCreate))\n        {\n            setLoading(true);\n        }\n        if(isFailure(stateCreate))\n        {\n            console.log(stateCreate.error)\n            setLoading(false);\n            fireToast(stateCreate.error.message, 'FAIL', customTheme.theme);\n        }\n        setText(\"\")\n        setTitle(\"\")\n        return () => {\n            dispatcher(resetCreateDraft());\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [setIsAddModalShow, stateCreate])\n\n    useEffect(() => {\n        if(isSuccess(stateUpdate))\n        {\n            setLoading(false);\n            setIsAddModalShow(false);\n            fireToast(stateUpdate.data.message, 'SUCCESS', customTheme.theme);\n            fetchNextData(page)\n        }\n        if(isLoading(stateUpdate))\n        {\n            setLoading(true);\n        }\n        if(isFailure(stateUpdate))\n        {\n            setLoading(false);\n            fireToast(stateUpdate.error.message, 'FAIL', customTheme.theme);\n        }\n        setText(\"\")\n        setTitle(\"\")\n        return () => {\n            dispatcher(resetUpdateDraft());\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [setIsAddModalShow,stateUpdate])\n\n    // Bold, Italic ve üstünü çizme butonlarının bulunduğu fonksiyonlar.\n    const handleFormat = (format) => {\n        const textarea = document.getElementById(\"message-box\");\n        const { selectionStart, selectionEnd } = textarea;\n\n        if (selectionStart !== selectionEnd) {\n            const beforeSelection = text.slice(0, selectionStart);\n            const selectedText = text.slice(selectionStart, selectionEnd);\n            const afterSelection = text.slice(selectionEnd);\n\n            let formattedText = selectedText;\n\n            switch (format) {\n                case 'bold':\n                    formattedText = `*${selectedText}*`;\n                    break;\n                case 'italic':\n                    formattedText = `_${selectedText}_`;\n                    break;\n                case 'strikethrough':\n                    formattedText = `~${selectedText}~`;\n                    break;\n                // Diğer biçimlendirme türleri için benzer şekilde durumlar ekleyebilirsiniz\n                default:\n                    break;\n            }\n\n            const updatedText = `${beforeSelection}${formattedText}${afterSelection}`;\n            setText(updatedText);\n        } else {\n            // Eğer seçili metin yoksa, imlecin bulunduğu yere format sembollerini ekle\n            const insertSymbol = (() => {\n                switch (format) {\n                    case 'bold':\n                        return '*';\n                    case 'italic':\n                        return '_';\n                    case 'strikethrough':\n                        return '~';\n                    default:\n                        return '';\n                }\n            })();\n\n            const textBeforeCursor = text.slice(0, selectionStart);\n            const textAfterCursor = text.slice(selectionStart);\n\n            const updatedText = `${textBeforeCursor}${insertSymbol}${insertSymbol}${textAfterCursor}`;\n            setText(updatedText);\n        }\n    };\n\n    // Liste yapma butonlarının fonksiyonları.\n    const handleList = (listType) => {\n        const textarea = document.getElementById(\"message-box\");\n        const { selectionStart, selectionEnd } = textarea;\n\n        if (selectionStart !== selectionEnd) {\n            const beforeSelection = text.slice(0, selectionStart);\n            const selectedText = text.slice(selectionStart, selectionEnd);\n            const afterSelection = text.slice(selectionEnd);\n\n            let formattedText = selectedText.split('\\n').map((line, index) => {\n                if (listType === 'unordered') {\n                    return `- ${line}`;\n                } else if (listType === 'ordered') {\n                    return `${index + 1}. ${line}`;\n                }\n                return line;\n            }).join('\\n');\n\n            const updatedText = `${beforeSelection}${formattedText}\\n${afterSelection}`;\n            setText(updatedText);\n        }\n    };\n\n    const handleEmojiSelect = (emoji) => {\n        const emojiText = emoji.native; // Seçilen emoji metni\n        const textarea = document.getElementById(\"message-box\");\n        const { selectionStart, selectionEnd } = textarea;\n\n        const beforeSelection = text.slice(0, selectionStart);\n        const afterSelection = text.slice(selectionEnd);\n\n        const updatedText = `${beforeSelection}${emojiText}${afterSelection}`;\n        setText(updatedText);\n\n        setShowEmojiModel(false); // Emoji seçildikten sonra emoji modalini kapat\n    };\n\n    return(\n        <div\n            className={\"card\"}\n            style={{\n                padding: 20\n            }}\n        >\n            <div\n                className={\"d-flex flex-column \"}\n            >\n                <h4>Title</h4>\n                <input\n                    className={\"form-control form-control-solid w-100 mb-5\"}\n                    placeholder=\"Message Title..\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                    disabled={modalType === \"info\" && true}\n                />\n            </div>\n            <div className={\"d-flex flex-column mt-3\"}>\n                <h4>Message</h4>\n                <div className={\"d-flex justify-content-center pt-2 pb-2 border rounded-top-3 light\"}>\n                    <CustomButton\n                        onPress={() => handleFormat('bold')}\n                        iconName=\"text-bold\"\n                        modalType={modalType}\n                    />\n                    <CustomButton\n                        onPress={() => handleFormat('italic')}\n                        iconName=\"text-italic\"\n                        modalType={modalType}\n                    />\n                    <CustomButton\n                        onPress={() => handleFormat('strikethrough')}\n                        iconName=\"text-strikethrough\"\n                        modalType={modalType}\n                    />\n                    <CustomButton\n                        onPress={() => handleList('ordered')}\n                        iconName=\"text-number\"\n                        modalType={modalType}\n                    />\n                    <CustomButton\n                        onPress={() => handleList('unordered')}\n                        iconName=\"text-circle\"\n                        modalType={modalType}\n                    />\n                    <CustomButton\n                        onPress={() => setShowEmojiModel(true)}\n                        iconName=\"emoji-happy\"\n                        modalType={modalType}\n                    />\n                </div>\n                <textarea\n                    id=\"message-box\"\n                    rows={6}\n                    className={\"form-control form-control-solid w-100 mb-5\"}\n                    placeholder=\"Lütfen göndermek istediğiniz mesajınızı yazınız..\"\n                    value={text}\n                    onChange={(e) => setText(e.target.value)}\n                    disabled={modalType === \"info\" && true}\n                />\n            </div>\n\n            <div style={{\n                visibility: modalType === \"info\" && \"hidden\",\n                display: \"flex\",\n                justifyContent: 'flex-end',\n                marginTop: 20,\n            }}>\n                <button className={\"btn btn-primary\"} onClick={handleSubmit}>\n                    {modalType === \"add\" ? \"Send\" : \"Save\"}\n                </button>\n            </div>\n            {\n                showEmojiModel && (\n                    <DraftEmojiModal\n                        setShowEmojiModal={setShowEmojiModel}\n                        setSelectedEmoji={handleEmojiSelect}\n                        customTheme={customTheme}\n                    />\n                )\n            }\n            {showEmojiModel && <div className='modal-backdrop fade show'></div>}\n\n        </div>\n    )\n}\n\nconst CustomButton = ({onPress, iconName, modalType}) => {\n    return (\n        <button onClick={onPress}\n                style={{marginRight: 5, backgroundColor: \"transparent\", border: \"none\"}}\n                disabled={modalType === \"info\" && true}>\n            <KTIcon\n                iconName={iconName}\n                iconType=\"duotone\"\n                className={\"bigger-icon\"}\n            />\n        </button>\n    )\n}\n\nexport default DraftCreateForm;","import React from \"react\";\n//import { Modal} from \"antd\";\nimport '../index.css';\nimport DraftCreateForm from \"../forms/DraftCreateForm\";\nimport ModalHeader from \"./ModalHeader\";\n\nconst AddDraftModal = ({page, fetchNextData,updateDraft, addDraft, setIsAddModalShow, customTheme, modalType, selectedUser}) => {\n    return (\n        <div\n            className='modal fade show d-block'\n            id='kt_modal_add_draft'\n            role='dialog'\n            tabIndex={-1}\n            aria-modal='true'\n        >\n            {/* begin::Modal dialog */}\n            <div className='modal-dialog modal-dialog-centered mw-650px'>\n                {/* begin::Modal content */}\n                <div className='modal-content' style={{display: 'flex', justifyContent: 'center'}}>\n                    <ModalHeader\n                        title={\"Add Draft\"}\n                        handleCloseModal={() => setIsAddModalShow(false)}\n                    />\n\n                    {/* begin::Modal body */}\n                    <DraftCreateForm\n                        page={page}\n                        fetchNextData={fetchNextData}\n                        setIsAddModalShow={setIsAddModalShow}\n                        customTheme={customTheme}\n                        modalType={modalType}\n                        selectedUser={selectedUser}\n                        addDraft={addDraft}\n                        updateDraft={updateDraft}\n                    />\n                    {/* end::Modal body */}\n\n                </div>\n                {/* end::Modal content */}\n            </div>\n            {/* end::Modal dialog */}\n        </div>\n    )\n}\n\nexport default AddDraftModal;","import React, {useEffect, useState} from \"react\";// eslint-disable-next-line no-unused-vars\nimport '../index.css';\nimport AddDraftModal from \"../modal/AddDraftModal\";\nimport {KTIcon} from \"../../../../_metronic/helpers\";\nimport {Pagination, Spin} from \"antd\"; // Empty component from Ant Design\nimport {useSelector} from \"react-redux\";\nimport {isFailure, isLoading, isSuccess} from \"../../../../utilities/reduxStateHelper\";\nimport {fireToast} from \"../../../../utilities/toastHelper\";\nimport { resetDeleteDrafts } from \"../../../../services/redux/drafts/delete-draft\";\n\nconst CustomTable = ({dispatch,updateDraft,deleteDraft,dataSource,addDraft, customTheme, setSelectedUser, selectedUser, paginateData, fetchNextData, loading}) => {\n    const [isAddModalShow, setIsAddModalShow] = useState(false);\n    const [modalType, setModalType] = useState(\"add\");\n\n    const [page, setPage] = useState(1);\n    const stateDelete = useSelector((state) => state.draft.deleteDraft);\n    const deleteDraftFunc = (item) => {\n        deleteDraft(item);\n        fetchNextData(1)\n    }\n\n    useEffect(() => {\n        if(isSuccess(stateDelete))\n        {\n            setIsAddModalShow(false);\n            fireToast(stateDelete.data.message, 'SUCCESS', customTheme.theme);\n            fetchNextData(paginateData.page)\n        }\n        if(isLoading(stateDelete))\n        {\n\n        }\n        if(isFailure(stateDelete))\n        {\n            fireToast(stateDelete.error.message, 'FAIL',customTheme.theme);\n        }\n        return () => {\n            dispatch(resetDeleteDrafts());\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [setIsAddModalShow,stateDelete])\n    return(\n        <div style={{\n            display: 'flex',\n            flexDirection: 'column',\n            padding: 10,\n            backgroundColor: customTheme.backgroundColor,\n            borderRadius: 10\n        }}>\n            <div style={{\n                display: 'flex',\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                marginTop: 20,\n                marginBottom: 20,\n                paddingLeft: 20,\n                paddingRight: 20\n            }}>\n                <span style={{\n                    color: customTheme.color,\n                    fontSize: 21,\n                    fontWeight: 'bold',\n                    fontFamily: 'Inter'\n                }}>Draft List</span>\n                <button\n                    type='button'\n                    className='btn btn-primary p-2 p-md-3'\n                    onClick={() => {\n                        setModalType(\"add\");\n                        setIsAddModalShow(true);\n                    }}\n                >\n                    <KTIcon iconName='plus' className='fs-2'/>\n                    Add Draft\n                </button>\n            </div>\n            <div>\n                {\n                    loading && (\n                        <div className={\"d-flex justify-content-center align-items-center\"}>\n                            <Spin />\n                        </div>\n                    )\n                }\n                {\n                    dataSource && dataSource.map((item) => (\n                        <div\n                            key={item.id}\n                            style={{\n                                backgroundColor: customTheme.itemBg,\n                                marginBottom: 10,\n                                padding: 10,\n                                borderRadius: 10,\n                                paddingLeft: 20,\n                                display: 'flex',\n                                justifyContent: 'space-between',\n                                alignItems: 'center'\n                            }}\n                        >\n                            <span\n                                style={{\n                                    color: customTheme.color,\n                                    cursor: 'pointer'\n                                }}\n                                onClick={() => {\n                                    setModalType(\"info\");\n                                    setSelectedUser(item);\n                                    setIsAddModalShow(true);\n                                }}\n                            >\n                                {item.title}\n                            </span>\n                            <div>\n                                <button\n                                    onClick={() => {\n                                        setModalType(\"edit\");\n                                        setSelectedUser(item);\n                                        setIsAddModalShow(true);\n                                    }}\n                                    style={{marginRight: 5, backgroundColor: \"transparent\", border: \"none\"}}\n                                >\n                                    <KTIcon\n                                        iconName={\"message-edit\"}\n                                        iconType=\"duotone\"\n                                        className={\"bigger-icon\"}\n                                    />\n                                </button>\n                                <button\n                                    onClick={() => {\n                                        deleteDraftFunc(item);\n                                    }}\n                                    style={{marginRight: 5, backgroundColor: \"transparent\", border: \"none\"}}\n                                >\n                                    <KTIcon\n                                        iconName={\"delete-files\"}\n                                        iconType=\"duotone\"\n                                        className={\"bigger-icon\"}\n                                    />\n                                </button>\n                            </div>\n                        </div>\n                    ))\n                }\n                {\n                    dataSource.length === 0 && (\n                        <div\n                            className={\"d-flex flex-column p-20 w-100 justify-content-center align-items-center border rounded\"}\n                        >\n                            <KTIcon iconName=\"cross-circle\" className={\"bigger-icon mb-4\"} />\n                            <h3 className={\"mb-0 \"}>Created Draft Not Available!</h3>\n                        </div>\n                    )\n                }\n            </div>\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'flex-end',\n                    marginTop: 10,\n                }}\n            >\n                <Pagination\n                    defaultCurrent={1}\n                    total={paginateData.totalItems}\n                    pageSize={paginateData.perpage}\n                    className={customTheme.theme === \"light\" ? \"light-theme\" : \"dark-theme\"}\n                    onChange={(page) => {fetchNextData(page)}}\n                />\n            </div>\n            {\n                isAddModalShow && (\n                    <AddDraftModal\n                        dispatch={dispatch}\n                        fetchNextData={fetchNextData}\n                        page={page}\n                        addDraft={addDraft}\n                        setIsAddModalShow={setIsAddModalShow}\n                        customTheme={customTheme}\n                        modalType={modalType}\n                        selectedUser={selectedUser}\n                        updateDraft={updateDraft}\n                    />\n                )\n            }\n            {isAddModalShow && <div className='modal-backdrop fade show'></div>}\n        </div>\n    )\n}\n\nexport default CustomTable;","import React, {useEffect, useState} from \"react\";\nimport CustomTable from './table/CustomTable';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {get_local_storage_item} from \"../../../utilities\";\nimport {isFailure, isLoading, isSuccess} from \"../../../utilities/reduxStateHelper\";\nimport {getDraftsAction, resetGetAllDraft} from \"../../../services/redux/drafts/get-all-draft\";\nimport {createDraftAction} from \"../../../services/redux/drafts/create-draft\";\nimport {getDraftByIdAction, resetDraftGetByID} from \"../../../services/redux/drafts/get-draft-by-id\";\nimport {deleteDraftAction} from \"../../../services/redux/drafts/delete-draft\";\nimport {updateDraftAction} from \"../../../services/redux/drafts/update-draft\";\nimport {useTheme} from \"../../../services/themeService\";\n\n\nconst DraftList = () => {\n    const [requested, setRequested] = useState(false);\n    const {theme} = useTheme();\n    const dispathcer = useDispatch();\n    const getAllDraftState = useSelector((state) => state.draft.getAllDraft);\n    const getDraftByIDState = useSelector((state) => state.draft.getByIdDraft);\n    \n    // eslint-disable-next-line no-unused-vars\n    const [defaultPerPage, setDefaultPerPage] = useState(5);\n    const [paginateData, setPaginateData] = useState({});\n    const [drafts, setDrafts] = useState([]);\n    const [selectedDraft, setSelectedDraft] = useState();\n    const [loading, setLoading] = useState(false);\n\n    const setSelectedUser = (draft) => {\n        const id = draft['id'];\n        getDraftByID({id});\n    }\n    \n    const getDraftByID = ({id}) => {\n        dispathcer(getDraftByIdAction({userId: get_local_storage_item(\"user\").id, draftId: id}))\n    }\n    \n    const fetchNextData = (page) => {\n        dispathcer(getDraftsAction({userId: get_local_storage_item(\"user\").id, page: page, perPage: defaultPerPage}));\n    }\n\n    const addNewDraft = ({title, text}) => {\n        dispathcer(createDraftAction({userId: get_local_storage_item(\"user\").id, title: title, text: text}));\n    }\n\n    const updateDraft = ({selectedUser,title,text}) => {\n        dispathcer(updateDraftAction({userId: get_local_storage_item(\"user\").id, draftId: selectedUser.id, title: title, text: text}));\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const deleteDraft = (item) => {\n        dispathcer(deleteDraftAction({userId: get_local_storage_item(\"user\").id, draftId: item.id}))\n    }\n\n\n\n    useEffect(() => {\n        if (!requested)\n        {\n             dispathcer(getDraftsAction(\n             {\n                 userId: get_local_storage_item(\"user\").id, page:1, perPage: defaultPerPage\n             }))\n             setRequested(true);\n        }\n    }, [defaultPerPage, dispathcer, paginateData, requested])\n    useEffect(() => {\n        if (isSuccess(getAllDraftState)) {\n            setDrafts(getAllDraftState.data.data);\n            setPaginateData(getAllDraftState.data.meta);\n            setLoading(false);\n        }\n        if (isFailure(getAllDraftState))\n        {\n        }\n        if (isLoading(getAllDraftState))\n        {\n            setLoading(true);\n        }\n        return () => {\n            dispathcer(resetGetAllDraft());\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[getAllDraftState, fetchNextData])\n\n    useEffect(() => {\n        if (isSuccess(getDraftByIDState)) {\n            setSelectedDraft(getDraftByIDState.data.data);\n            dispathcer(resetDraftGetByID());\n        }\n        if (isFailure(getDraftByIDState))\n        {\n        }\n        if (isLoading(getDraftByIDState))\n        {\n\n        }\n        return () => {\n            dispathcer(resetDraftGetByID());\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[drafts, getDraftByIDState])\n\n    return (\n        <div style={{\n            marginTop: '20px'\n        }}>\n            <CustomTable\n                dispatch={dispathcer}\n                addDraft={addNewDraft}\n                dataSource={drafts}\n                customTheme={theme}\n                title={\"Draft Table\"}\n                setSelectedUser={setSelectedUser}\n                paginateData={paginateData}\n                fetchNextData={fetchNextData}\n                selectedUser={selectedDraft}\n                deleteDraft={deleteDraft}\n                updateDraft={updateDraft}\n                loading={loading}\n            />\n        </div>\n    )\n}\n\nexport default DraftList;"],"names":["window","useLayoutEffect","useEffect","CustomButton","_ref2","onPress","iconName","modalType","_jsx","onClick","style","marginRight","backgroundColor","border","disabled","children","KTIcon","iconType","className","_ref","page","fetchNextData","updateDraft","setIsAddModalShow","addDraft","customTheme","selectedUser","stateCreate","useSelector","state","draft","createDraft","stateUpdate","dispatcher","useDispatch","text","setText","useState","title","setTitle","loading","setLoading","showEmojiModel","setShowEmojiModel","isSuccess","fireToast","data","message","theme","isLoading","isFailure","console","log","error","resetCreateDraft","resetUpdateDraft","handleFormat","format","textarea","document","getElementById","selectionStart","selectionEnd","beforeSelection","slice","selectedText","afterSelection","formattedText","concat","updatedText","insertSymbol","textBeforeCursor","textAfterCursor","handleList","listType","split","map","line","index","join","_jsxs","padding","placeholder","value","onChange","e","target","id","rows","visibility","display","justifyContent","marginTop","handleSubmit","alert","DraftEmojiModal","setShowEmojiModal","setSelectedEmoji","emoji","emojiText","native","role","tabIndex","ModalHeader","handleCloseModal","DraftCreateForm","dispatch","deleteDraft","dataSource","setSelectedUser","paginateData","isAddModalShow","setModalType","setPage","stateDelete","resetDeleteDrafts","flexDirection","borderRadius","marginBottom","paddingLeft","paddingRight","color","fontSize","fontWeight","fontFamily","type","Spin","item","itemBg","alignItems","cursor","deleteDraftFunc","length","Pagination","defaultCurrent","total","totalItems","pageSize","perpage","AddDraftModal","DraftList","requested","setRequested","useTheme","dispathcer","getAllDraftState","getAllDraft","getDraftByIDState","getByIdDraft","defaultPerPage","setDefaultPerPage","setPaginateData","drafts","setDrafts","selectedDraft","setSelectedDraft","getDraftByID","getDraftByIdAction","userId","get_local_storage_item","draftId","getDraftsAction","perPage","meta","resetGetAllDraft","resetDraftGetByID","CustomTable","createDraftAction","deleteDraftAction","_ref3","updateDraftAction"],"sourceRoot":""}